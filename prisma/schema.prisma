// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id String  @id @db.Uuid @default(uuid())
name String @db.VarChar(200)
username String @db.VarChar(200) @unique
email String @db.VarChar(200) @unique
password String @db.VarChar(15)
token String? @unique
following Follow[] @relation("user_following")
followers Follow[] @relation("user_followers")
tweets Tweet[]
reTweet ReTweet[]
@@map("user")
}

model Tweet {
  id String @id @db.Uuid @default(uuid()) @map("id_tweet") @unique
  content String @db.Text
  idUser String @db.Uuid @map("id_user")
  authorTweet String
  reTweet ReTweet[]
  likes Liker[]
  user User @relation(fields: [idUser], references: [id])
  @@map("tweet")
  @@unique([id, idUser])
}
model ReTweet {
  idTweetOriginal String @db.Uuid @map("id_tweetOriginal")
  contentTweetOriginal String @db.Text
  authorTweetOriginal String
  idReTweet String @id @db.Uuid  @default(uuid()) @map("id_reTweet")
  idUserReTweet String @db.Uuid @map("id_user_reTweet")
  contentReTweet String @db.Text @map("content_retweet")
  authorReTweet String
  likes Liker[]
  tweet Tweet @relation(fields: [idTweetOriginal], references: [id])
  user User @relation(fields: [idUserReTweet],references: [id])
  @@unique([idReTweet])
  @@map("reTweet")
}

model Follow {
  id String @ id @db.Uuid @default(uuid())
  idUserFollowing String @db.Uuid @map("id_user_following")
  idUserFollower String @db.Uuid @map("id_user_follower")
  following User @relation("user_following", fields: [idUserFollowing],references: [id])
  followers User @relation("user_followers",fields: [idUserFollower],references: [id])

  @@unique([idUserFollowing, idUserFollower], name: "follow_pkey")
  @@map("follows")
}

model Liker {
  idLike String @id @db.Uuid @default(uuid()) @map("id_like")
  idTweet String? @db.Uuid @map("id_tweet")
  idAuthorTweet String? @db.Uuid @map("id_author_Tweet")
  idReTweet String? @db.Uuid @map("id_retweet")
  idAuthorReTweet String? @db.Uuid @map("id_author_ReTweet")
  idAuthorLike String @db.Uuid @map("id_author_like")
  authorLike String @map("username_author_like")
  contentTweetLiked String? @db.Text
  contentReTweet String? @db.Text
  tweet Tweet? @relation(fields: [idTweet],references: [id])
  reTweet ReTweet? @relation(fields: [idReTweet],references: [idReTweet])
  @@map("liker")
}
